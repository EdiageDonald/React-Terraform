version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:16.13.0

jobs:
  build:
    executor: node-executor
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys: 
            - app-{{ checksum "package.json" }}
            - app-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json" }}
      - run: # run a command
          name: Show current branch # name of command
          command: echo ${CIRCLE_BRANCH} # Log the branch we are checking out from  

  deploy-to-aws-s3:
    docker:
      - image: circleci/node:16.13.0
    working_directory: ~/repo  
    steps:
      - checkout
      - run: # run a command
          name: Show current branch # name of command
          command: echo ${CIRCLE_BRANCH} # Log the branch we are checking out from  
      - run: # we need to install the aws cli
          name: Installing AWS CLI
          #working_directory: /  
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python3-dev build-essential  
      - run: # we need to build the actual project
          name: Build Project
          command: |
            npm install
            npm run build
            cd build 
            zip ../build.zip -r * .[^.]*
            echo "Build successful"    
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete  
            elif [ "${CIRCLE_BRANCH}" == "staging" ]  
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete  
            fi

  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/node:16.13.0
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run: # we need to install the aws cli
          name: Installing AWS CLI
           # working_directory: /  
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install -y awscli
            sudo apt-get install -y python3-pip python3-dev build-essential  
      - run: # we need to build the actual project
          name: Build Project
          command: |
            npm install
            npm run build
            cd build 
            zip ../build.zip -r * .[^.]*
            echo "Build successful"
      - run:
          name: Deploy to CloudFront
          command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set default.region ${AWS_REGION}

            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths "/*"
            elif [ "${CIRCLE_BRANCH}" == "staging" ]  
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths "/*"
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths "/*" 
            fi  

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
