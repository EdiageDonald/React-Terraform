version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:16.13.0

jobs:
  build:
    executor: node-executor
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys: app-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: app-{{ checksum "package.json" }}
      - run: # run a command
          name: Show current branch # name of command
          command: echo ${CIRCLE_BRANCH} # Log the branch we are checking out from  

  deploy-to-aws-s3:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete  
            elif [ "${CIRCLE_BRANCH}" == "staging" ]  
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete  
            fi

  deploy-to-aws-cloudfront:
    docker:
      - image: circleci/python:3.8
    steps:
      - checkout
      - run:
          name: Deploy to CloudFront
          command: |
            aws configure set preview.cloudfront
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths /\*
            elif [ "${CIRCLE_BRANCH}" == "staging" ]  
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths /\*
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths /\* 

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy-to-aws-s3:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
