version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:16.13.0
    working_directory: ~/repo

aliases:
  - &show-current-branch-name 
    run: # run a command
      name: Show current branch # name of command
      command: echo ${CIRCLE_BRANCH} 
  - &restore-cache
    restore_cache:
      keys: 
          - app-{{ checksum "package.json" }}
          - app-
  - &install-dependencies
    run:
      name: Install dependencies
      command: npm install
  - &save-cache
    save_cache:
      paths:
        - node_modules
      key: app-{{ checksum "package.json" }}
  - &install-aws-cli
    run: # we need to install the aws cli
      name: Installing AWS CLI
      working_directory: /  
      command: |
        sudo apt-get -y -qq update
        sudo apt-get install -y awscli
        sudo apt-get install -y python3-pip python3-dev build-essential  
  - &build-project
    run: # we need to build the actual project
      name: Build Project
      command: |
        npm install
        npm run build
        cd build 
        zip ../build.zip -r * .[^.]*
        echo "Build successful"    


jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - *show-current-branch-name 
      - *restore-cache
      - *install-dependencies
      - *save-cache
  linting:
    executor: node-executor
    steps:
      - checkout
      - *restore-cache
      - *show-current-branch-name 
      - run:
          name: Run linting
          command: npm run lint    

  deploy-to-aws-s3:
    executor: node-executor
    steps:
      - checkout
      - *show-current-branch-name 
      - *install-aws-cli  
      - *build-project   
      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then 
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_PRODUCTION} --delete  
            elif [ "${CIRCLE_BRANCH}" == "staging" ]  
            then
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_BUCKET_STAGING} --delete
            else
              aws --region ${AWS_REGION} s3 sync ~/repo/build s3://${AWS_DEV_BUCKET} --delete  
            fi

  deploy-to-aws-cloudfront:
    executor: node-executor
    steps:
      - checkout
      - *show-current-branch-name
      - *install-aws-cli  
      - *build-project 
      - run:
          name: Deploy to CloudFront
          command: |
            aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            aws configure set default.region ${AWS_REGION}

            if [ "${CIRCLE_BRANCH}" == "master" ];
            then 
              aws cloudfront create-invalidation --distribution-id ${PRODUCTION_DISTRIBUTION_ID} --paths "/*"
            elif [ "${CIRCLE_BRANCH}" == "staging" ];  
            then
              aws cloudfront create-invalidation --distribution-id ${STAGING_DISTRIBUTION_ID} --paths "/*"
            else
              aws cloudfront create-invalidation --distribution-id ${DEV_DISTRIBUTION_ID} --paths "/*" 
            fi  

workflows:
  build_and_deploy:
    jobs:
      - build
      - linting:
          requires:
           - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master 

      - deploy-to-aws-s3:
          requires:
            - linting
          filters:
            branches:
              only:
                - develop
                - staging
                - master
      - deploy-to-aws-cloudfront:
          requires:
            - deploy-to-aws-s3
          filters:
            branches:
              only:
                - develop
                - staging
                - master
